<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.UserMapper">


    <select id="selectUser" parameterType="int" resultMap="user">
      select * from user where userId=#{id}
    </select>


    <!--参数: 用户名       userName
        返回类型: HashMap
    -->
    <select id="selectUserByUserName" parameterType="String" resultType="HashMap">
        SELECT * FROM user WHERE userName=#{name}
    </select>


    <!--参数:         用户组name
        返回结果:     该用户组下的所有用户-->
    <select id="selectUserByGroupName" parameterType="String" resultType="HashMap">
        SELECT * FROM user WHERE groupId in (
          SELECT groupId FROM user_group WHERE groupName=#{groupName}
        )
    </select>

    <!--
        参数: likeName
        返回类型: User
        描述:  通过用户名中关键字  模糊查询

        ${} : 表示拼接sql串,将接收到的参数的内容不加任何修饰的拼接在sql中  注意: 使用${}拼接,引起sql注入
        ${value}:接收输入参数的内容,如果传入参数是简单类型,${} 中只能使用value

    -->
    <select id="selectUserByLikeName" parameterType="java.lang.String" resultType="entity.User">
        SELECT * FROM user WHERE userName LIKE '%${likeName}%'
    </select>


    <!--参数:     user(User)
        自增主键的返回 selectKey
    -->
    <insert id="insert" parameterType="entity.User" useGeneratedKeys="true" keyProperty="userId">

        <selectKey keyProperty="userId" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO user(userName, userPassword, addTime, groupId, glod)
        VALUES (#{userName},#{userPassword},#{addTime},#{groupId},#{glod})
    </insert>

    <!--
        参数: userId

    -->
    <delete id="deleteById" parameterType="int">
        DELETE FROM user WHERE user.userId = #{userId}
    </delete>

    <update id="updateById" parameterType="entity.User" useGeneratedKeys="true" keyProperty="userId">
        UPDATE user SET
        userName=#{userName},userPassword=#{userPassword},addTime=#{addTime},groupId=#{groupId},glod=#{glod}
        WHERE userId=#{userId}
    </update>

    <resultMap id="user" type="entity.User">
        <id property="userId" column="userId"/>
        <id property="userName" column="userName"/>
        <id property="userPassword" column="userPassword"/>
        <id property="addTime" column="addTime"/>
        <id property="groupId" column="groupId"/>
        <id property="glod" column="glod"/>
    </resultMap>

    <!--<resultMap id="UserResultMap" type="entity.User">-->
    <!--<result property="userId" column="userId"></result>-->
    <!--<result property="userName" column="userName"></result>-->
    <!--<result property="userPassword" column="userPassword"></result>-->
    <!--<result property="addTime" column="addTime"></result>-->
    <!--<result property="groupId" column="groupId"></result>-->
    <!--<result property="glod" column="glod"></result>-->
    <!--</resultMap>-->

</mapper>
